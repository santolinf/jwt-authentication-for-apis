{
	"info": {
		"_postman_id": "6b1308f4-0c83-4228-a1d4-552a6c5e602d",
		"name": "SimplySend JWT liveProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Sign-up",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"emailId\": \"jb@test.com\",\r\n    \"password\": \"!1cense2Kill\",\r\n    \"firstName\": \"James\",\r\n    \"lastName\": \"Bond\",\r\n    \"age\": 30,\r\n    \"address\": \"Wellington Square\",\r\n    \"phone\": \"01234 567890\",\r\n    \"tag\": \"007\",\r\n    \"role\": \"REPORTEE\",\r\n    \"managerId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/v1/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jwt = pm.response.headers.get('Authorization')?.substring(7); // ignore prefix Bearer\r",
							"if (jwt !== undefined) {\r",
							"    pm.collectionVariables.set('ss_jwt', jwt);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "emailId",
							"value": "jb@test.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "!1cense2Kill",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8080/v1/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "List items",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/items?type=&page=&limit=",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"items"
					],
					"query": [
						{
							"key": "type",
							"value": ""
						},
						{
							"key": "page",
							"value": ""
						},
						{
							"key": "limit",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User Logout",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/logout",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request Order",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reason\": \"testing\",\r\n    \"items\": [\r\n        {\r\n            \"id\": 5\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "localhost:8080/v1/orders",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Orders",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/orders?status=REQUESTED&reportee=&limit=&page=",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"orders"
					],
					"query": [
						{
							"key": "status",
							"value": "REQUESTED"
						},
						{
							"key": "reportee",
							"value": ""
						},
						{
							"key": "limit",
							"value": ""
						},
						{
							"key": "page",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Approve Order",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"approve\": false,\r\n    \"comment\": \"Not available\"\r\n}"
				},
				"url": {
					"raw": "localhost:8080/v1/orders/2/approve",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"orders",
						"2",
						"approve"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/users?limit=&page=",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": ""
						},
						{
							"key": "page",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/users/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke User",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:8080/v1/users/2/revoke",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"v1",
						"users",
						"2",
						"revoke"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ss_jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const csrf_token = pm.collectionVariables.get('csrf_token');",
					"if (csrf_token !== undefined) {",
					"    pm.request.headers.add({ key: 'X-XSRF-TOKEN', value: `${csrf_token}` });",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const xsrf_token = pm.cookies.get('XSRF-TOKEN');",
					"pm.collectionVariables.set('csrf_token', xsrf_token);",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "csrf_token",
			"value": ""
		},
		{
			"key": "ss_jwt",
			"value": ""
		}
	]
}
